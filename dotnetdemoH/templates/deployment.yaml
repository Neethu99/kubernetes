apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  strategy:
    type: {{ .Values.strategyType }}  # Update to read from values.yaml
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.nodeAffinity.projectLabelKey }}
                operator: In
                values:
                - {{ .Values.nodeAffinity.projectLabelValue }}
      initContainers:
      - name: init-setup
        image: busybox:latest
        command: ['sh', '-c', 'ls; pwd; sleep 10']
        envFrom:
        - configMapRef:
            name: {{ .Values.configMapName }}
      containers:
      - name: {{ .Values.containerName }}
        image: {{ .Values.image }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        livenessProbe:
          httpGet:
            path: /_status/healthz
            port: {{ .Values.containerPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ .Values.containerPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
